Data Types & Variable
Data types atau tipe data adalah sebuah pengklasifikasian data berdasarkan jenis data tersebut. Untuk mengembangkan sebuah program, ada beberapa tipe data yang akan kita pelajari. Di antaranya adalah Character, String, Array, Numbers, dan Booleans. Semuanya akan kita bahas sejelas dan sesederhana mungkin di dalam submodul ini.

Namun, ada satu hal yang kita perlu tahu terlebih dahulu, yaitu Variabel. Umumnya variabel digunakan untuk menyimpan informasi atau nilai yang akan dikelola di dalam sebuah program. Sebuah variabel akan membutuhkan kata kunci var atau val, identifier, type, serta initialization. Kira-kira strukturnya seperti berikut.



Berikut adalah contoh variable yang bisa diubah nilainya bernama company dan memiliki nilai "Dicoding" dengan tipe String.



Mari kita ulas setiap bagian pada struktur variabel di atas.

var atau val
var atau val digunakan untuk mengontrol nilai dari sebuah variabel. Dengan kata kunci var, kita bisa mengubah nilai yang sudah diinisialisasikan.Berikut contohnya.

Variabel company yang awalnya memiliki nilai “Dicoding” sekarang sudah diubah menjadi “Dicoding Academy”. Ketika menggunakan kata kunci val, kita tidak bisa mengubah nilai yang sebelumnya sudah diinisialisasi. Jika kita memaksa untuk mengubahnya, akan terjadi eror seperti berikut.

Seperti inilah gambarannya jika diilustrasikan.dos-c208c8830475a48a0dfeffd2e403d07c20240206104709.png
Identifier
Identifier merupakan nama dari sebuah variabel. Pada contoh kode di atas yang merupakan identifier adalah company. Perlu diketahui bahwa di dalam sebuah program, kita tidak bisa membuat lebih dari 1 (satu) variabel dengan nama sama.
Type
Pada bagian inilah kita menentukan tipe data dari variabel tersebut. Tipe data dibutuhkan agar kompiler dapat mengetahui bagaimana sebuah data akan digunakan. Tipe data dari contoh variabel di atas adalah String. Karena Kotlin mendukung type inference, kita diperbolehkan untuk tidak menuliskan tipe data secara eksplisit.

Initialization
Dan yang terakhir adalah initialization atau nilai awal dari sebuah variabel. Pada contoh di atas, yang berperan sebagai initialization adalah “Dicoding” dan “Dicoding Academy”.

Tipe data juga menentukan operasi apa saja yang dapat dilakukan pada sebuah variabel dan bagaimana nilai dari sebuah variabel disimpan. Contoh, ketika kita menggunakan operator + terhadap dua variabel yang bertipe String seperti berikut.



Pada kode di atas, kedua nilai dari variabel firstWord dan lastWord akan digabungkan menjadi satu nilai string. Berbeda ketika kita menggunakan operator + pada variabel yang bertipe Int seperti berikut.



Kompiler akan menjalankan operasi aritmetika seperti pada contoh di atas di mana nilai dari variabel valueA dan valueB akan dijumlahkan lalu menghasilkan nilai baru.

Selain operator tambah (+), ada juga operator lain yang perlu Anda ketahui untuk memudahkan dalam menuliskan kode Kotlin. Berikut beberapa di antaranya.

+, -, *, /, dan % adalah operator matematika. Anda bisa mengelola variabel bertipe angka dengan berbagai operator matematika yang ada. 
= adalah operator penugasan. Biasanya digunakan untuk menentukan nilai dari sebuah variabel.
+=,-=, *=, /=, dan %=adalah operator penugasan yang menggabungkan konsep matematika.
// Awalnya dari seperti ini.
var value = 1
value = value + 2
 
// Menjadi seperti ini.
var anotherValue = 1
anotherValue += 2
 
// Nilai value dan anotherValue akan bernilai sama, yakni 3
&&, ||, dan ! adalah operator logika. Operator AND (&&) dan OR (||) digunakan untuk membandingkan dua nilai sesuai dengan kondisi yang Anda inginkan. Berbeda dengan operator NOT (!), biasanya ia digunakan untuk melakukan negasi pada value yang ada.
++ dan -- adalah operator increment dan decrement yang untuk menambah atau mengurangi satu nilai.
Tentunya masih banyak simbol spesial dan operator yang bisa Anda gunakan dalam membangun kode dengan Kotlin. Anda bisa melihat selengkapnya di Keyword di Kotlin.

Anda juga dapat mempelajari lebih lanjut referensi berikut untuk memperkaya wawasan Anda.

Basic types | Kotlin Documentation
The val Property != Immutable in Kotlin
